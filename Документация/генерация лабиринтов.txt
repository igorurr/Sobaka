2 вида:

текстурная:
	алгоритм того чувака где дохуя матана
	возможность менять все математические параметры что он задавал
	+ если все пути нейронов упёрлись куда либо - создаются новые точки
	+ сливаем все точечные лабиринты в уперевшиеся

	алгоритм преобразования графовых лабиринтов в перпендекулярные текстурные (инициализация графовым лабиринтом)
		внутри текстурного лабиринта находится графовый, некоторые параметры текстурного лабиринта не работают

	параметры:
		inverse: true / false (цвета всего 2: ч и б, просто меняем местами)
		толщина пути: { min, max }
		толщина фона: { min, max }
		сглаживание изменения размеров толщины пути: функция определённая на [0;1], возвращающая [0;1] и
			показывающая как будут сглаживаться неровности
		сглаживание изменения размеров толщины фона: аналогично "сглаживание изменения размеров толщины пути"



графовая
	параметры:
		алгоритм: Рандом Белякова / структурный (по куску структуры выстраивается весь лабиринт)
			/ алгоритм того каефного чувака что я себе скинул только его пооптимизировать чучуть




общие параметры обеих:
	область (не обязательно чтобы все линии были либо параллельными либо перпендикулярными, добавим параметр
		отвечающий за то как сглаживать кривости)
	сглаживание: inset / outset (вся область разбивается на квадраты по которым строится лабиринт, некоторые
		квадраты будут лежать прямо на границе области: inset - не принимать такие квадраты в область
		генерации, outset - принимать)
	циклы: [0;1] - доля от всех путей, либо n - количество путей которые будут зациклены (пока что пусть как
		то на рандом будет завязано)
	изолированность: [0;1] - доля от всех путей, либо n - количество изолированных путей (для 1 текстурного - 
		чекаем сколько уже есть изолированных (если упёрлись все - создаются новые истоки) добавляем новые
		деля существующие на равные по размеру лабиринты, либо сливаем более мелкие существующие)
	циклы-результат: сколько было загенерено циклов
	изолированность-результат: сколько было загенерено изолированых
	зоны: [ { id, parrentId } ]
	клетки зоны: { xy: id зоны } (xy - клетка на графовом, пиксель на текстурном) (-1 - зона фона)
